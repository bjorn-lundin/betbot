-----------------------------------------------------
-- This file is AUTOGENERATED by                     
-- /home/bnl/bnlbot/botstart/bot-1-0/script/tcl/make_table_package.tcl at                                       
--9.6-10510                                          
----CHANGES HERE WILL BE LOST NEXT GENERATE!!!!----- 
-----------DO NOT EDIT THIS FILE!!!!---------------- 
-----------------------------------------------------



pragma Warnings(Off);
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;
with Sattmate_Types, Sattmate_Calendar, Sql, Simple_List_Class;

package Table_Abalances is

  use Sattmate_Types, Sattmate_Calendar;

  type Data_Type is record
      Baldate :    Time_Type  := Time_Type_First ; -- Primary Key
      Balance :    Float_8  := 0.0 ; --
      Exposure :    Float_8  := 0.0 ; --
      Ixxlupd :    String (1..15) := (others => ' ') ; --
      Ixxluts :    Time_Type  := Time_Type_First ; --
  end record;
  Empty_Data : Table_Abalances.Data_Type;
  -- 
  -- Table name as string 
  --
  Table_Abalances_Name : constant String := "ABALANCES";
  Table_Abalances_Set_Name : constant String := "ABALANCES_SET";
  Table_Abalances_Row_Name : constant String := "ABALANCES_ROW";
  -- 
  -- Column names as strings 
  --
  Baldate_Name : constant String := "BALDATE";
  Balance_Name : constant String := "BALANCE";
  Exposure_Name : constant String := "EXPOSURE";
  Ixxlupd_Name : constant String := "IXXLUPD";
  Ixxluts_Name : constant String := "IXXLUTS";
  -- 
  -- Column names as enumerator literals 
  --
  type Column_Type is (
        Baldate,
        Balance,
        Exposure,
        Ixxlupd,
        Ixxluts);

  package Abalances_List_Pack is new Simple_List_Class(Table_Abalances.Data_Type);

  -- Procedures for DBMS DEF
  -- Primary key
  function Get(Stm : in Sql.Statement_Type) return Table_Abalances.Data_Type;
  --------------------------------------------
  procedure Read(Data       : in out Table_Abalances.Data_Type;
                 End_Of_Set : in out Boolean);
  --------------------------------------------
  function Is_Existing(Baldate : Time_Type) return Boolean;
  --------------------------------------------
  function Get(Baldate : Time_Type) return Table_Abalances.Data_Type;
  --------------------------------------------

  procedure Read_List(Stm  : in     Sql.Statement_Type;
                      List : in out Abalances_List_Pack.List_Type;
                      Max  : in     Integer_4 := Integer_4'Last);
  --------------------------------------------
  procedure Read_All(List  : in out Abalances_List_Pack.List_Type;
                     Order : in     Boolean := False;
                     Max   : in     Integer_4 := Integer_4'Last);
  --------------------------------------------
  procedure Delete(Data : in Table_Abalances.Data_Type);
  --------------------------------------------
  procedure Update(Data : in out Table_Abalances.Data_Type; Keep_Timestamp : in Boolean := False);
  --------------------------------------------
  procedure Insert(Data : in out Table_Abalances.Data_Type; Keep_Timestamp : in Boolean := False);
  --------------------------------------------
  procedure Delete_Withcheck(Data : in Table_Abalances.Data_Type);
  --------------------------------------------
  procedure Update_Withcheck(Data : in out Table_Abalances.Data_Type; Keep_Timestamp : in Boolean := False);
  --------------------------------------------
  -- Primary keys, when several fields


  -- Procedures for all DBMS

  function To_String(Data : in Table_Abalances.Data_Type) return String;

end Table_Abalances ;
