-----------------------------------------------------
-- This file is AUTOGENERATED by                     
-- /home/bnl/bnlbot/botstart/bot-1-0/script/tcl/make_table_package.tcl at                                       
--9.6-10510                                          
----CHANGES HERE WILL BE LOST NEXT GENERATE!!!!----- 
-----------DO NOT EDIT THIS FILE!!!!---------------- 
-----------------------------------------------------



pragma Warnings(Off);
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;
with Sattmate_Types, Sattmate_Calendar, Sql, Simple_List_Class;

package Table_Abethistory is

  use Sattmate_Types, Sattmate_Calendar;

  type Data_Type is record
      Betid :    Integer_8  := 0 ; -- Primary Key
      Powerdays :    Integer_4  := 0 ; -- Primary Key
      Startts :    Time_Type  := Time_Type_First ; -- non unique index 3
      Historysum :    Float_8  := 0.0 ; --
      Ixxlupd :    String (1..15) := (others => ' ') ; --
      Ixxluts :    Time_Type  := Time_Type_First ; --
  end record;
  Empty_Data : Table_Abethistory.Data_Type;
  -- 
  -- Table name as string 
  --
  Table_Abethistory_Name : constant String := "ABETHISTORY";
  Table_Abethistory_Set_Name : constant String := "ABETHISTORY_SET";
  Table_Abethistory_Row_Name : constant String := "ABETHISTORY_ROW";
  -- 
  -- Column names as strings 
  --
  Betid_Name : constant String := "BETID";
  Powerdays_Name : constant String := "POWERDAYS";
  Startts_Name : constant String := "STARTTS";
  Historysum_Name : constant String := "HISTORYSUM";
  Ixxlupd_Name : constant String := "IXXLUPD";
  Ixxluts_Name : constant String := "IXXLUTS";
  -- 
  -- Column names as enumerator literals 
  --
  type Column_Type is (
        Betid,
        Powerdays,
        Startts,
        Historysum,
        Ixxlupd,
        Ixxluts);

  package Abethistory_List_Pack is new Simple_List_Class(Table_Abethistory.Data_Type);

  -- Procedures for DBMS DEF
  -- Primary key
  function Get(Stm : in Sql.Statement_Type) return Table_Abethistory.Data_Type;
  --------------------------------------------
  procedure Read(Data       : in out Table_Abethistory.Data_Type;
                 End_Of_Set : in out Boolean);
  --------------------------------------------
  function Is_Existing(Betid : Integer_8;
                       Powerdays : Integer_4) return Boolean;
  --------------------------------------------
  function Get(Betid : Integer_8;
                       Powerdays : Integer_4) return Table_Abethistory.Data_Type;
  --------------------------------------------

  procedure Read_List(Stm  : in     Sql.Statement_Type;
                      List : in out Abethistory_List_Pack.List_Type;
                      Max  : in     Integer_4 := Integer_4'Last);
  --------------------------------------------
  procedure Read_All(List  : in out Abethistory_List_Pack.List_Type;
                     Order : in     Boolean := False;
                     Max   : in     Integer_4 := Integer_4'Last);
  --------------------------------------------
  procedure Delete(Data : in Table_Abethistory.Data_Type);
  --------------------------------------------
  procedure Update(Data : in out Table_Abethistory.Data_Type; Keep_Timestamp : in Boolean := False);
  --------------------------------------------
  procedure Insert(Data : in out Table_Abethistory.Data_Type; Keep_Timestamp : in Boolean := False);
  --------------------------------------------
  procedure Delete_Withcheck(Data : in Table_Abethistory.Data_Type);
  --------------------------------------------
  procedure Update_Withcheck(Data : in out Table_Abethistory.Data_Type; Keep_Timestamp : in Boolean := False);
  --------------------------------------------
  -- Primary keys, when several fields

  procedure Read_I1_Betid(Data  : in     Table_Abethistory.Data_Type;
                       List  : in out Abethistory_List_Pack.List_Type;
                       Order : in     Boolean := False;
                       Max   : in     Integer_4 := Integer_4'Last);
  --------------------------------------------

  procedure Delete_I1_Betid(Data  : in     Table_Abethistory.Data_Type);
  --------------------------------------------

  function Is_Existing_I1(
                 Betid     : in Integer_8 )      return Boolean;

  -- Index 

  procedure Read_Startts(Data  : in     Table_Abethistory.Data_Type;
                       List  : in out Abethistory_List_Pack.List_Type;
                       Order : in     Boolean := False;
                       Max   : in     Integer_4 := Integer_4'Last);
  --------------------------------------------

  procedure Read_One_Startts(Data       : in out Table_Abethistory.Data_Type;
                           Order      : in     Boolean := False;
                           End_Of_Set : in out Boolean);
  --------------------------------------------

  function Count_Startts(Data : Table_Abethistory.Data_Type) return Integer_4;
  --------------------------------------------


  procedure Delete_Startts(Data  : in     Table_Abethistory.Data_Type);
  --------------------------------------------


  -- Procedures for all DBMS

  function To_String(Data : in Table_Abethistory.Data_Type) return String;

end Table_Abethistory ;
